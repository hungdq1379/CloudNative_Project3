apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
  # Phan them vao
  labels:
    app: backend
    release: prometheus
  namespace: observability
  annotations:
    "sidecar.jaegertracing.io/inject": "true"
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: backend-port
    # end Phan them vao
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        #Phan Them vao
    spec:
      containers:
      - name: backend
        image: barbietunnie/observability-backend-service:latest
        ports:
      - name: backend-port
        containerPort: 8080
        env:
        - name: JAEGER_AGENT_HOST
        value: app-tracer-agent.observability.svc.cluster.local
        #end phan them vao
    spec:
      containers:
      - name: backend
        # We advise you to build, push and use your own image, instead of using instructor's image.      
        image: ghcr.io/jasonsmithio/backend:v1
        ports:
        - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  #Phan them vao
  labels:
    app: backend
    release: prometheus
  namespace: observability
spec:
  selector:
    app: backend
  ports:
    - name: backend
      port: 8081
      protocol: tcp
      targetPort: 8080
  type: LoadBalancer
  #Phan them vao
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: backend
  namespace: monitoring
  labels:
    app: backend
    release: prometheus
spec:
  selector:
    matchLabels:
      app: backend
      release: prometheus
  endpoints:
  - port: backend
    path: /metrics
    interval: 5s
  namespaceSelector:
  #   # any: true # also works (but is a catchall)
    matchNames:
    - observability  
